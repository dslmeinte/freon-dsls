// Generated by the ProjectIt Language Generator.
import { Metamodel, MetamodelElement, Metamodels } from "../../language/gen";

/**
 * Interface LIonCoreWorker implements the extended visitor pattern of instances of language LIonCore.
 * Class LIonCoreWalker implements the traversal of the model tree, classes that implement this interface
 * are responsible for the actual work being done on the nodes of the tree.
 * Every node is visited twice, once before the visit of its children, and once after this visit.
 */
export interface LIonCoreWorker {
    execBeforeMetamodels(modelelement: Metamodels): boolean;
    execAfterMetamodels(modelelement: Metamodels): boolean;

    execBeforeMetamodel(modelelement: Metamodel): boolean;
    execAfterMetamodel(modelelement: Metamodel): boolean;

    execBeforeMetamodelElement(modelelement: MetamodelElement): boolean;
    execAfterMetamodelElement(modelelement: MetamodelElement): boolean;
}
