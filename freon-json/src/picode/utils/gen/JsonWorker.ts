// Generated by the ProjectIt Language Generator.
import {
    JsonArray,
    JsonBoolean,
    JsonDirectory,
    JsonFile,
    JsonFiles,
    JsonKeyValuePair,
    JsonNull,
    JsonNumber,
    JsonObject,
    JsonString,
    JsonUndefined,
    JsonValue
} from "../../language/gen";

/**
 * Interface JsonWorker implements the extended visitor pattern of instances of language Json.
 * Class JsonWalker implements the traversal of the model tree, classes that implement this interface
 * are responsible for the actual work being done on the nodes of the tree.
 * Every node is visited twice, once before the visit of its children, and once after this visit.
 */
export interface JsonWorker {
    execBeforeJsonFiles(modelelement: JsonFiles): boolean;
    execAfterJsonFiles(modelelement: JsonFiles): boolean;

    execBeforeJsonDirectory(modelelement: JsonDirectory): boolean;
    execAfterJsonDirectory(modelelement: JsonDirectory): boolean;

    execBeforeJsonFile(modelelement: JsonFile): boolean;
    execAfterJsonFile(modelelement: JsonFile): boolean;

    execBeforeJsonValue(modelelement: JsonValue): boolean;
    execAfterJsonValue(modelelement: JsonValue): boolean;

    execBeforeJsonString(modelelement: JsonString): boolean;
    execAfterJsonString(modelelement: JsonString): boolean;

    execBeforeJsonNumber(modelelement: JsonNumber): boolean;
    execAfterJsonNumber(modelelement: JsonNumber): boolean;

    execBeforeJsonUndefined(modelelement: JsonUndefined): boolean;
    execAfterJsonUndefined(modelelement: JsonUndefined): boolean;

    execBeforeJsonNull(modelelement: JsonNull): boolean;
    execAfterJsonNull(modelelement: JsonNull): boolean;

    execBeforeJsonArray(modelelement: JsonArray): boolean;
    execAfterJsonArray(modelelement: JsonArray): boolean;

    execBeforeJsonObject(modelelement: JsonObject): boolean;
    execAfterJsonObject(modelelement: JsonObject): boolean;

    execBeforeJsonKeyValuePair(modelelement: JsonKeyValuePair): boolean;
    execAfterJsonKeyValuePair(modelelement: JsonKeyValuePair): boolean;

    execBeforeJsonBoolean(modelelement: JsonBoolean): boolean;
    execAfterJsonBoolean(modelelement: JsonBoolean): boolean;
}
