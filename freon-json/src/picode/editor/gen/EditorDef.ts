// Generated by the ProjectIt Language Generator.
import { Language, Model, ModelUnit, Property, Concept, Interface, PiCompositeProjection, PiProjection } from "@projectit/core";

import { projectitConfiguration } from "../../config/ProjectitConfiguration";
import {
    JsonFile,
    JsonString,
    JsonNumber,
    JsonUndefined,
    JsonNull,
    JsonArray,
    JsonObject,
    JsonKeyValuePair,
    JsonBoolean
} from "../../language/gen";
import { ProjectionDefault } from "../../editor/gen";

/**
 * Adds all known projection groups to the root projection.
 * @param rootProjection
 */
export function initializeProjections(rootProjection: PiCompositeProjection) {
    for (const p of projectitConfiguration.customProjection) {
        rootProjection.addProjection(p);
    }

    rootProjection.addProjection(new ProjectionDefault());
}

/**
 * Adds trigger and reference shortcut info to the in-memory representation of structure of the language metamodel.
 */
export function initializeEditorDef() {
    Language.getInstance().concept("JsonFile").trigger = "file";
    Language.getInstance().concept("JsonString").trigger = "'";
    Language.getInstance().concept("JsonNumber").trigger = "1";
    Language.getInstance().concept("JsonUndefined").trigger = "undefined";
    Language.getInstance().concept("JsonNull").trigger = "null";
    Language.getInstance().concept("JsonArray").trigger = "[";
    Language.getInstance().concept("JsonObject").trigger = "{";
    Language.getInstance().concept("JsonKeyValuePair").trigger = ":";
    Language.getInstance().concept("JsonBoolean").trigger = "true";
}
